if [ `uname` = 'Darwin' ]; then
  alias ls='ls -G'
  alias du='du -k -d 1 $argv'
else
  alias ls='ls --color=auto'
  alias du='du -k --max-depth=1 $argv'
fi

alias df='df -kh $argv'
alias less='less -R'
alias sub="atom"
alias b='bundle exec'

if type exa >/dev/null; then
  alias l='exa'
  alias ll='exa -l --git'
  alias la='exa -a'
  alias lal='exa -la --git'

  alias tree='exa -T'
else
  alias l='ls'
  alias ll='ls -lh'
  alias la='ls -a'
  alias lal='ls -lah'
fi

cd() {
  builtin cd "$@" && l
}

pcd() {
  cd "$(find ~/src -type d -maxdepth 5 | fzf)"
}

yarn() {
  command yarn "$@" --no-emoji
}

gen_passwd() {
  ruby -rsecurerandom -e "puts 4.times.map { SecureRandom.alphanumeric(3) }.join('-')"
}

proj() {
  local project="$1"
  local project_path="${HOME}/src/${project}"
  # local target="${project_path}/${project}.sublime-project"

  cd $project_path

  if [ -f "${target}" ]; then
    echo "\nOpening project file ${target}"
    sub $target
  else
    echo "\nOpening project dir ${project_path}"
    sub $project_path
  fi
}

# # Use fzf to select a kube context and echo it.
# select_kubecontext() {
#   local row ctx
#
#   row=$(kubectl config get-contexts --no-headers | fzf)
#   ctx=$(echo "$row" | sed -E 's/^\*? *//' | awk '{print $1}')
#
#   echo $ctx
# }
#
# # Switch to the supplied or chosen kube context.
# kctx() {
#   local context
#
#   context="$1"
#   if [ -z "$context" ] && context="$(select_kubecontext)"
#
#   kubectl config use-context "$context"
# }
#
# # Get a shell in the supplied or chosen kube context.
# ksh() {
#   local bright="\033[1;37m"
#   local context="$1"
#   local pod
#
#   [ -z "$context" ] && context="$(select_kubecontext)"
#
#   echo "Getting api shell in ${bright}${context}${reset_color}"
#
#   pod=$(kubectl get pods --context="$context" -n app -l app=api -o json | jq -r '.items | map(select(.status.phase == "Running") | .metadata.name)[0]')
#
#   echo "  -> found ${bright}${pod}${reset_color}"
#
#   kubectl exec --context="$context" -n app -it "$pod" zsh
# }
